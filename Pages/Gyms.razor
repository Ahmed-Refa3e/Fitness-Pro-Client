@page "/Gyms"
@using Fitness_Pro_Client.Models.Gym
@inject GymService GymService
@inject LocationService LocationService

<PageTitle>Gyms</PageTitle>

<h2 class="text-center my-4">Available Gyms</h2>

<div class="container py-3">
    <div class="row g-3 mb-4 align-items-end">
        <div class="col-md-4">
            <input type="text" class="form-control" placeholder="Search by name..." @bind="search" />
        </div>
        <div class="col-md-3">
            <select class="form-select" @bind="selectedGovernorate" @bind:event="oninput" @onchange="OnGovernorateChanged">
                <option value="">All Governorates</option>
                @foreach (var gov in governorates)
                {
                    <option value="@gov">@gov</option>
                }
            </select>

        </div>
        <div class="col-md-3">
            <select class="form-select" @bind="selectedCity">
                <option value="">All Cities</option>
                @foreach (var city in cities)
                {
                    <option value="@city">@city</option>
                }
            </select>
        </div>
        <div class="col-md-2 d-grid">
            <button class="btn btn-primary" @onclick="ApplyFilters">Apply</button>
        </div>
    </div>


    @if (gyms == null)
    {
        <p class="text-center">Loading gyms...</p>
    }
    else if (!gyms.Data.Any())
    {
        <p class="text-center text-muted">No gyms found.</p>
    }
    else
    {
        <div class="row g-4">
            @foreach (var gym in gyms.Data)
            {
                <div class="col-md-4">
                    <div class="card h-100 shadow-sm">
                        <img src="@ImagesHelper.GetImageUrl(gym.PictureUrl)"
                             loading="lazy"
                             class="card-img-top"
                             alt="@gym.GymName"
                             width="100"
                             height="200"
                             onerror="this.onerror=null; this.src='images/Default.png';">
                        <div class="card-body">
                            <h5 class="card-title">@gym.GymName</h5>
                            <p class="card-text text-muted">@gym.Address, @gym.City</p>
                            <p class="card-text fw-bold">@gym.MonthlyPrice EGP / month</p>
                            <NavLink href="@($"/Gyms/{gym.GymID}")" class="btn btn-outline-primary btn-sm">View Details</NavLink>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Pagination Section -->
        <nav class="mt-4 d-flex justify-content-center" aria-label="Page navigation">
            <Pagination CurrentPage="@currentPage" TotalPages="@gyms.TotalPages" OnPageChanged="LoadPage" />
        </nav>
    }
</div>

@code {
    private PagedGymResponse? gyms;

    private int currentPage = 1;

    private string? search;
    private string? selectedGovernorate;
    private string? selectedCity;

    private List<string> governorates = new();
    private List<string> cities = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadPage(currentPage);
        governorates = await LocationService.GetGovernoratesAsync();
    }

    private async Task ApplyFilters()
    {
        currentPage = 1;
        await LoadPage(currentPage);
    }

    private async Task LoadPage(int page)
    {
        currentPage = page;
        gyms = await GymService.GetGymsAsync(
            page: page,
            pageSize: 9,
            GymName: search,
            governorate: selectedGovernorate,
            city: selectedCity
        );
    }

    private async Task OnGovernorateChanged(ChangeEventArgs e)
    {
        selectedGovernorate = e.Value?.ToString();
        cities = string.IsNullOrEmpty(selectedGovernorate) 
            ? new List<string>() 
            : await LocationService.GetCitiesAsync(selectedGovernorate);
        selectedCity = null; 
    }
}