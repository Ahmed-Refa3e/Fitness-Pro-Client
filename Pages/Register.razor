@page "/register"
@inject AuthService AuthService
@inject NavigationManager Navigation

<div class="container d-flex justify-content-center align-items-center" style="min-height: 100vh;">
    <div class="card shadow-lg p-4" style="max-width: 600px; width: 100%;">
        <h3 class="text-center mb-4 text-primary">Create Your Account</h3>

        <EditForm Model="@registerModel" OnValidSubmit="HandleRegister">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="row g-3">
                <div class="col-md-6">
                    <label class="form-label">First Name</label>
                    <InputText @bind-Value="registerModel.FirstName" class="form-control" />
                </div>

                <div class="col-md-6">
                    <label class="form-label">Last Name</label>
                    <InputText @bind-Value="registerModel.LastName" class="form-control" />
                </div>

                <div class="col-md-6">
                    <label class="form-label">Gender</label>
                    <InputSelect @bind-Value="registerModel.Gender" class="form-select">
                        <option disabled value="">-- Select Gender --</option>
                        <option value="Male">Male</option>
                        <option value="Female">Female</option>
                    </InputSelect>
                </div>

                <div class="col-md-6">
                    <label class="form-label">Date of Birth</label>
                    <InputDate @bind-Value="registerModel.DateOfBirth" class="form-control" />
                </div>

                <div class="col-md-6">
                    <label class="form-label">Email</label>
                    <InputText @bind-Value="registerModel.Email" type="email" class="form-control" />
                </div>

                <div class="col-md-6">
                    <label class="form-label">Password</label>
                    <InputText @bind-Value="registerModel.Password" type="password" class="form-control" />
                </div>

                <div class="col-md-12">
                    <label class="form-label">Role</label>
                    <InputSelect @bind-Value="registerModel.Role" class="form-select">
                        <option disabled value="">-- Select Role --</option>
                        <option value="Trainee">Trainee</option>
                        <option value="Coach">Coach</option>
                    </InputSelect>
                </div>
            </div>

            <button type="submit" class="btn btn-primary w-100 mt-4">Sign Up</button>
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger mt-3">@errorMessage</div>
            }

            <div class="mt-3 text-center">
                <small>Already have an account? <a href="/login">Login</a></small>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private RegisterModel registerModel = new()
        {
        Gender = "",
        Role = ""    
    };
    private string? errorMessage;

    private async Task HandleRegister()
    {
        bool success = false;

        if (registerModel.Role == "Coach")
        {
            success = await AuthService.RegisterCoachAsync(registerModel);
        }
        else if (registerModel.Role == "Trainee")
        {
            success = await AuthService.RegisterTraineeAsync(registerModel);
        }

        if (success)
        {
            Navigation.NavigateTo($"/confirm-email?email={Uri.EscapeDataString(registerModel.Email!)}");
        }
        else
        {
            errorMessage = "Registration failed. This email is already taken, please choose another..";
        }
    }
}
