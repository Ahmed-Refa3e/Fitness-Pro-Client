@page "/onlineTraining"
@using Fitness_Pro_Client.Models.OnlineTraining
@inject CoachService coachService

<div class="container py-5">
    <h2 class="text-center mb-4">Available Coaches</h2>

    <!-- Filters -->
    <div class="row g-3 mb-4 align-items-end justify-content-center">
        <div class="col-md-4">
            <input type="text" class="form-control" placeholder="Search by Coach name..." @bind="search" />
        </div>
        <div class="col-md-3">
            <label>Min Rating: @minRating</label>
            <input type="range" class="form-range" min="0" max="5" step="0.1" @bind="minRating" />
        </div>
        <div class="col-md-3">
            <label>Max Rating: @maxRating</label>
            <input type="range" class="form-range" min="0" max="5" step="0.1" @bind="maxRating" />
        </div>
        <div class="col-md-2 d-grid">
            <button class="btn btn-primary" @onclick="ApplyFilters">Apply</button>
        </div>
    </div>

    <!-- Cards -->
    @if (coaches == null)
    {
        <p class="text-center">Loading coaches...</p>
    }
    else if (!coaches.Data.Any())
    {
        <p class="text-center text-muted">No coaches found.</p>
    }
    else
    {
        <div class="row g-4">
            @foreach (var coach in coaches.Data)
            {
                <div class="col-md-4">
                    <div class="card h-100 shadow-sm">
                        <img src="@ImagesHelper.GetImageUrl(coach.ProfilePictureUrl)"
                             class="card-img-top"
                             style="height: 220px; width: 220px; object-fit: cover; border-radius: 50%; margin: auto;"
                             alt="@coach.FullName"
                             onerror="this.onerror=null;this.src='images/Coach.jpg';" />




                        <div class="card-body">
                            <h5 class="card-title">@coach.FullName</h5>
                            <p class="card-text text-muted">Rating: @coach.Rating</p>
                            <NavLink class="btn btn-outline-primary btn-sm"
                                     href="@($"/coach-details/{coach.Id}")">
                                View Details
                            </NavLink>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Pagination Section -->
        <nav class="mt-4 d-flex justify-content-center" aria-label="Page navigation">
            <Pagination CurrentPage="@currentPage" TotalPages="@coaches.TotalPages" OnPageChanged="LoadPage" />
        </nav>
    }
</div>

@code {
    private PagedCoachResponse? coaches;

    private int currentPage = 1;
    private string? search;
    private double? minRating = null ;
    private double? maxRating = null ;

    protected override async Task OnInitializedAsync()
    {
        await LoadPage(currentPage);
    }

    private async Task ApplyFilters()
    {
        currentPage = 1;
        await LoadPage(currentPage);
    }

    private async Task LoadPage(int page)
    {
        currentPage = page;
        coaches = await coachService.GetCoachesAsync(
            page: page,
            pageSize: 9,
            CoachName: search,
            MinRating: minRating,
            MaxRating: maxRating
        );
    }
}
