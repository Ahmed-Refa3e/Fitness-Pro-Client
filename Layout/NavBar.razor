@using Microsoft.AspNetCore.Components.Routing
@inject ILocalStorageService localStorage
@inject NavigationManager Navigation

<!-- Navigation Bar -->
<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container">
        <!-- Brand/Logo -->
        <NavLink class="navbar-brand fw-bold" href="/">
            <i class="fa-solid fa-medal me-1"></i>
            Fitness Pro
        </NavLink>

        <!-- Mobile Toggle Button -->
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
                aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <!-- Navigation Items -->
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">

                <li class="nav-item">
                    <NavLink class="nav-link" href="/" Match="NavLinkMatch.All">
                        <i class="bi bi-house me-1"></i>
                        Home
                    </NavLink>
                </li>

                <li class="nav-item">
                    <NavLink class="nav-link" href="/about">
                        <i class="bi bi-person me-1"></i>
                        About
                    </NavLink>
                </li>

                <li class="nav-item">
                    <NavLink class="nav-link" href="/gyms">
                        <i class="fa-solid fa-dumbbell me-1"></i>
                        Gyms
                    </NavLink>
                </li>

                <li class="nav-item">
                    <NavLink class="nav-link" href="/onlineTraining">
                        <i class="fa-solid fa-person-running me-1"></i>
                        Online Training
                    </NavLink>
                </li>
            </ul>

            <!-- Right-aligned items -->
            <div class="d-flex align-items-center">
                <!-- Search Form -->
                <form class="d-flex me-3" role="search">
                    <input class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-outline-light" type="submit">
                        <i class="bi bi-search"></i>
                    </button>
                </form>

                <!-- Login / Signup / Logout Buttons -->
                @if (!isLoggedIn)
                {
                    <div class="btn-group">
                        <NavLink class="btn btn-outline-light me-2" href="/login">
                            <i class="bi bi-person-circle me-1"></i>
                            Login
                        </NavLink>
                        <NavLink class="btn btn-primary" href="/register">
                            <i class="bi bi-plus-circle me-1"></i>
                            Sign Up
                        </NavLink>
                    </div>
                }
                else
                {
                    <button class="btn btn-danger" @onclick="Logout">
                        <i class="bi bi-box-arrow-right me-1"></i>
                        Logout
                    </button>
                }
            </div>
        </div>
    </div>
</nav>

@code {
    private bool isLoggedIn = false;

    protected override async Task OnInitializedAsync()
    {
        string? token = await localStorage.GetItemAsync<string>("token");
        isLoggedIn = !string.IsNullOrEmpty(token);
    }

    private async Task Logout()
    {
        await localStorage.RemoveItemAsync("token");
        await localStorage.RemoveItemAsync("refreshToken");
        await localStorage.RemoveItemAsync("expiresAt");

        isLoggedIn = false;
        Navigation.NavigateTo("/login", forceLoad: true);
    }
}